# Terraform Helper Functions
tf_plan () {
  terraform plan -no-color | \
  tee /dev/tty
}

tf_grep() {
  grep \
    -e '#' \
    -e ' + ' \
    -e ' - ' \
    -e ' ~ ' \
    -e '-/+'
}

tf_target() {
  local IFS=$'\n'
  local RETURN='terraform apply'
  local TARGETS=($(fzf --multi --exit-0 --tac --no-sort))
  for TARGET in "${TARGETS[@]}"
  do
    RETURN+=$(
      echo "${TARGET}" | \
      cut \
        -d ' ' \
        -f 4 | \
      sed \
        -e 's/^/ --target=/' \
        -e 's/\"/\\\"/g'
    )
  done
  echo ${RETURN}
}

tf_migrate_role_datasource() {
  perl -0 -p -e \
  's|(resource\s+"aws_iam_role"\s+")(.*?)(".*?{.*?)<<EOF(.*?)EOF(.*})|print qx{echo '\''$4'\'' \| iam-policy-json-to-terraform -name $2 };print "\n",$1,$2,$3,"data.aws_iam_policy_document.$2.json",$5,"\n";|gse' |\
   sed '/^[1]$/d'
}

alias tf_move="terraform-state-mover"

tf_target_rm() {
  local IFS=$'\n'
  local TARGETS=($(fzf --multi --exit-0 --tac --no-sort))

  for TARGET in "${TARGETS[@]}"
  do
    RETURN+=$(
      echo "${TARGET}" | \
      cut \
        -d ' ' \
        -f 4 | \
      sed \
        -e 's/^/ /' \
        -e 's/\"/\\\"/g'
    )
  done
  echo "${RETURN}" | xargs terraform state rm
}
